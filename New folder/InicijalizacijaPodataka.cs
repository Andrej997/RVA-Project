///////////////////////////////////////////////////////////
//  InicijalizacijaPodataka.cs
//  Implementation of the Class InicijalizacijaPodataka
//  Generated by Enterprise Architect
//  Created on:      29-Sep-2020 8:30:07 PM
//  Original author: andrej
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



public class InicijalizacijaPodataka {

	private IDBService service;

	public InicijalizacijaPodataka(){
		service = new DBService();
	}

	~InicijalizacijaPodataka(){

	}

	public void CheckDBData(){
		CheckGlavniAdmin();
		CheckTrenere();
		CheckVezbace();
	}

	private void CheckGlavniAdmin()
	{
		var glavniAdmin = new Admin();
		glavniAdmin.FullName = "Glavni Admin";
		glavniAdmin.Username = "admin";
		glavniAdmin.Password = "admin";
		glavniAdmin.Role = 0;

		var retVal = service.FindAdmin(new LoginUser 
		{ 
			Username = glavniAdmin.Username, 
			Password = glavniAdmin.Password 
		});

		if (retVal == null)
			service.AddAdmin(glavniAdmin);
	}

	private void CheckTrenere()
	{
		var treneri = service.GetTrenere();
		if (treneri.Count == 0)
		{
			for (int i = 0; i < 3; i++)
			{
				service.CreateTrener(new Trener
				{
					FullName = $"Trener {GetLetter(i)}",
					Role = 2
				});
			}
		}
	}

	private void CheckVezbace()
	{
		var vezbaci = service.GetAllVezbace();
		if (vezbaci.Count == 0)
		{
			for (int i = 0; i < 3; i++)
			{
				service.AddVezbav(new Vezbac
				{
					FullName = $"Vezbac {GetLetter(i)}",
					Role = 1,
					Username = $"vezbac{i + 1}",
					Password = $"vezbac{i + 1}"
				});
			}
		}
	}

	/// 
	/// <param name="num"></param>
	private string GetLetter(int num){

		if (num == 2) return "Tri";
		else if (num == 1) return "Dva";
		else return "Jedan";
	}

}//end InicijalizacijaPodataka