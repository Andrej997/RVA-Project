///////////////////////////////////////////////////////////
//  Proxy.cs
//  Implementation of the Class Proxy
//  Generated by Enterprise Architect
//  Created on:      11-Sep-2020 10:34:44 PM
//  Original author: andrej
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



public class Proxy : IDBService {

	private DBService realService;

	~Proxy(){

	}

	public Proxy(){

	}

	public void LogAccess(string message)
	{
		Console.WriteLine(message);
		// TO DO: loguj u fajl
	}

	/// 
	/// <param name="dbService"></param>
	public Proxy(DBService dbService){
		realService = dbService;
	}

	/// 
	/// <param name="loginUser"></param>
	public Admin FindAdmin(LoginUser loginUser){

		var admin = realService.FindAdmin(loginUser);
		if (admin != null)
		{
			LogAccess($"{DateTime.Now} Admin [{admin.Username}] logged in!");
		}

		return admin;
	}

	/// 
	/// <param name="loginUser"></param>
	public Vezbac FindVezbac(LoginUser loginUser){

		var vezbac = realService.FindVezbac(loginUser);
		if (vezbac != null)
		{
			LogAccess($"{DateTime.Now} Vezbac [{vezbac.Username}] logged in!");
		}

		return vezbac;
	}

	/// 
	/// <param name="osoba"></param>
	public void LogOut(Osoba osoba){

		LogAccess($"{DateTime.Now} {osoba.Username} logged out!");
	}

}//end Proxy